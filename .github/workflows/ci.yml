name: CI
on:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
      - dev
  workflow_call:
  workflow_dispatch:

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python and Poetry
        uses: ./.github/actions/python-poetry
        with:
          groups: main,dev,test
      
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
      
      - name: Run tests with coverage
        run: |
          poetry run python -m pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=. tests/ | tee pytest-coverage.txt
      
      - name: Generate coverage report & comment on PR
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      
      - name: Update README with coverage HTML
        run: |
          # Extract coverage value and color
          COVERAGE=$(echo "${{ steps.coverageComment.outputs.coverage }}" | tr -d '%')
          COLOR="${{ steps.coverageComment.outputs.color }}"
          
          # Update the coverage HTML report
          echo "${{ steps.coverageComment.outputs.coverageHtml }}" > coverage_report.txt
          sed -i '/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\n'"$(cat coverage_report.txt)"'\n<!-- Pytest Coverage Comment:End -->' README.md
      
      - name: Update README with coverage badge
        run: |
          COVERAGE="${{ steps.coverageComment.outputs.coverage }}"
          COLOR="${{ steps.coverageComment.outputs.color }}"
          # Remove % from coverage for URL
          COVERAGE_URL=$(echo "$COVERAGE" | sed 's/%/%25/g')
          
          # Check if badge exists and update it
          if grep -q "!\[Coverage\]" README.md; then
            # Use perl instead of sed to avoid % issues
            perl -i -pe "s|!\[Coverage\]\(https://img\.shields\.io/badge/Coverage-[^-]*-[^)]*\)|![Coverage](https://img.shields.io/badge/Coverage-$COVERAGE_URL-$COLOR)|g" README.md
          else
            # Add badge below the title (first line starting with #)
            awk 'NR==1,/^# / {print} /^# / {print ""; print "![Coverage](https://img.shields.io/badge/Coverage-'"$COVERAGE_URL"'-'"$COLOR"')"; next} {print}' README.md > README.md.new
            mv README.md.new README.md
          fi
      
      - name: Commit coverage updates to README
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update coverage badge and report in README [skip ci]"
          file_pattern: README.md
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python and Poetry
        uses: ./.github/actions/python-poetry
      
      - name: Build wheel
        run: poetry build --format wheel
      
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: dist/