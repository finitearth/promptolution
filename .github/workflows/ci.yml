name: CI
on:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
      - dev
  workflow_call:
  workflow_dispatch:

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python and Poetry
        uses: ./.github/actions/python-poetry
        with:
          groups: main,dev,test
      
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
      
      - name: Run tests with coverage
        run: |
          poetry run python -m pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=. tests/ | tee pytest-coverage.txt
      
      - name: Generate coverage report & comment on PR
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
          hide-report: true  # Only show the badge in README, not the full report
      
      # Update README with coverage badge (simpler approach)
      - name: Update README with coverage badge
        run: |
          # Extract coverage value and color
          COVERAGE="${{ steps.coverageComment.outputs.coverage }}"
          COLOR="${{ steps.coverageComment.outputs.color }}"
          BADGE_MD="![Coverage](https://img.shields.io/badge/Coverage-${COVERAGE//%/%25}-${COLOR})"
          
          # Replace the content between markers with just the badge
          perl -i -0pe 's/<!-- Pytest Coverage Comment:Begin -->.*?<!-- Pytest Coverage Comment:End -->/<!-- Pytest Coverage Comment:Begin -->\n'"$BADGE_MD"'\n<!-- Pytest Coverage Comment:End -->/s' README.md
      
      # Commit README changes
      - name: Commit coverage updates to README
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update coverage badge in README [skip ci]"
          file_pattern: README.md
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python and Poetry
        uses: ./.github/actions/python-poetry
      
      - name: Build wheel
        run: poetry build --format wheel
      
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: dist/